ДЗ 2 и 3 по Компьютерным сетям
Мягкий дедлайн: 1 июля 23:59
Жесткий дедлайн: 6 июля 23:59
Штраф: 1 балл за каждый день просрочки
ДЗ 2
Написать свою реализацию протокола гарантированной доставки данных между двумя узлами. Разрешается использовать только лишь голые UDP-сокеты. В питоне такой сокет создается следующим образом:
Организация кода остается на ваше усмотрение. Задание будет считаться выполненным, если
будет написан код протокола, гарантирующего доставку данных когда-нибудь (eventually) и сохраняющего порядок отправленных данных
будет написана обертка, позволяющая запускать код локально, например

import socket
sock = socket.socket(socket.AF_INET, socket.SOCK_DGRAM)

# клиент
$ ./client.sh localhost 9000 # хост и порт сервера
# сервер
$ ./server.sh localhost 9000 # хост и порт, на который должен сесть сервер
Порядок запуска клиента и сервера не должен иметь значения. В логе каждого инстанса нужно выводить текущие действия инстанса, состояние протокола и отправленные/полученные данные. В качестве отправляемых данных нужно использовать stdin клиента.
Оценивание:
Реализована отправка через UDP без гарантий -- 3 балла Реализована гарантия доставки -- 3 балла
Реализовано сохранение порядка доставки -- 4 балла
ДЗ 3
Взять решение предыдущего задания и упаковать его в docker-compose вместе с библиотекой для стресс-тестирования pumba . Клиент и сервер должны работать каждый в отдельном контейнере. Клиент должен раз в 5 секунд отправлять содержимое какого-нибудь текстового файлика серверу. В логах должно быть видно что делает клиент и сервер. Утилита pumba должна уметь видеть каждый контейнер и уметь изменять параметры работы сети каждого контейнера.
Оценивание:
Собран docker-compose с сервисами -- 5 баллов
Контейнеры настроены для работы с pumba -- 1 балл
Написан скрипт для автоматизированного тестирования через pumba -- 4 балла. Тесты должны включать потерю пакетов, замедление скорости передачи, изменение содержимого пакета.
Сдача
Сдавать надо через репозиторий на github, в который добавлен @naorlov, дополнительно нужно продублировать ссылку в личку в телеграме.